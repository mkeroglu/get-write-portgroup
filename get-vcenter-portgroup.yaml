---
- hosts: localhost
  gather_facts: yes
  connection: local
  tasks:
    - name: Gather all registered dvswitch
      community.vmware.vmware_dvswitch_info:
        hostname: "{{ vcenter_hostname }}"
        username: "{{ vcenter_username }}"
        password: "{{ vcenter_password }}"
        validate_certs: false
      register: dvswitch_info

    - name: show dswitches
      ansible.builtin.debug:
        msg: "{{ dvswitch_info }}"

    - name: create dswitch list
      ansible.builtin.set_fact:
        dswitches: "{{ dvswitch_info.distributed_virtual_switches | map(attribute='configure.name') | list }}"

    - name: show dswitches
      ansible.builtin.debug:
        msg: "{{ dswitches }}"

    - name: Gather info about specific dvswitch
      community.vmware.vmware_dvswitch_info:
        hostname: "{{ vcenter_hostname }}"
        username: "{{ vcenter_username }}"
        password: "{{ vcenter_password }}"
        switch_name: "{{ item }}"
        validate_certs: false
      register: dvswitch_info_specific
      loop: "{{ dswitches }}"

    - name: show dswitch info
      ansible.builtin.debug:
        msg: "{{ dvswitch_info_specific.results }}"

    - name: Get info about DVPG
      community.vmware.vmware_dvs_portgroup_find:
        hostname: "{{ vcenter_hostname }}"
        username: "{{ vcenter_username }}"
        password: "{{ vcenter_password }}"
        dvswitch: "{{ item }}"
        validate_certs: false
      register: dvpg_info
      loop: "{{ dswitches }}"

    - name: show dvpg information
      ansible.builtin.debug:
        msg: "{{ dvpg_info.results }}"

    - name: Extract DVPG information and set facts
      ansible.builtin.set_fact:
        dvpg_info_extracted: "{{ dvpg_info_extracted | default([]) + item.dvs_portgroups }}"
      loop: "{{ dvpg_info.results }}"
      loop_control:
        label: "{{ item.item }}"

    - name: Display extracted DVPG information
      ansible.builtin.debug:
        var: dvpg_info_extracted

    - name: Set facts for dvswitch, name, and vlan_id
      ansible.builtin.set_fact:
        dvswitch: "{{ dvpg_info_extracted | map(attribute='dvswitch') | list }}"
        name: "{{ dvpg_info_extracted | map(attribute='name') | list }}"
        vlan_id: "{{ dvpg_info_extracted | map(attribute='vlan_id') | list }}"

    - name: Display extracted DVPG information
      ansible.builtin.debug:
        var: vcenter

    - name: Display extracted DVPG information
      ansible.builtin.debug:
        var: dvswitch

    - name: Display extracted DVPG information
      ansible.builtin.debug:
        var: name

    - name: Display extracted DVPG information
      ansible.builtin.debug:
       var: vlan_id

    - name: set timedate to get consistency accross the collected data
      ansible.builtin.set_fact:
        datetime_of_pb: "{{ ansible_date_time['iso8601_basic'] }}"

    - name: Display extracted DVPG information
      ansible.builtin.debug:
        var: datetime_of_pb

    - name: Dissplay extracted DVPG information
      ansible.builtin.debug:
        var: vcenter_hostname


#    - name: Combine dvswitch, name, and vlan_id
 #     set_fact:
  #      combined_output: "{{ combined_output | default([]) + [item.dvswitch + ', ' + datetime_of_pb + ', ' + vcenter_hostname + ', ' + item.name + ', ' + item.vlan_id] }}"
   #   loop: "{{ dvpg_info_extracted }}"
    #  loop_control:
     #   label: "{{ item.name }}"

#    - name: Print combined output
 #     debug:
  #      msg: "{{ combined_output }}"


    - name: Combine dvswitch, name, and vlan_id
      set_fact:
        combined_output: "{{ combined_output | default([]) + [item.dvswitch + ', ' + datetime_of_pb + ', ' + vcenter_hostname + ', ' + item.name + ', ' + item.vlan_id] }}"
      loop: "{{ dvpg_info_extracted }}"
      loop_control:
        label: "{{ item.name }}"

    - name: Get current date and time
      command: python3.11 -c 'import datetime; now = datetime.datetime.now(); print(now.strftime("%Y-%m-%d %H:%M:%S.%f"))'
      register: current_datetime

    - name: Print current date and time with timezone offset
      debug:
        msg: "{{ current_datetime.stdout }}+03:00"

    - name: Insert switch portgroup information into PostgreSQL
      postgresql_query:
        db: "{{ login_db }}"
        login_user: "{{ login_user }}"
        login_password: "{{ login_password }}"
        login_host: "{{ login_host }}"
        query: |
          {% for index in range(dvswitch | length) %}          
            INSERT INTO "{{ table_name }}" (name, status, vcenter_name, port_group_name, vlan_id, is_managed, created_at, updated_at)
            VALUES ( '{{ dvswitch[index] }}', '{{ datetime_of_pb }}', '{{ vcenter_hostname }}', '{{ name[index] }}', '{{ vlan_id[index] }}', true, '{{ current_datetime.stdout }}+03', '{{ current_datetime.stdout }}+03')
            ON CONFLICT (name, vcenter_name, port_group_name, vlan_id) DO UPDATE SET
            status = EXCLUDED.status,
            is_managed = EXCLUDED.is_managed,
            updated_at = EXCLUDED.updated_at;
          {% endfor %}
